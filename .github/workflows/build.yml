name: Build manylinx wheels and deploy

permissions:
  contents: write

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build Wheel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - torch-version: "2.3.1"
            python-version: "3.8"
            cuda-version: "11.8.0"
          - torch-version: "2.3.1"
            python-version: "3.8"
            cuda-version: "12.1.1"
          - torch-version: "2.3.1"
            python-version: "3.9"
            cuda-version: "11.8.0"
          - torch-version: "2.3.1"
            python-version: "3.9"
            cuda-version: "12.1.1"
          - torch-version: "2.3.1"
            python-version: "3.10"
            cuda-version: "11.8.0"
          - torch-version: "2.3.1"
            python-version: "3.10"
            cuda-version: "12.1.1"
          - torch-version: "2.3.1"
            python-version: "3.11"
            cuda-version: "11.8.0"
          - torch-version: "2.3.1"
            python-version: "3.11"
            cuda-version: "12.1.1"
          - torch-version: "2.4.1"
            python-version: "3.8"
            cuda-version: "11.8.0"
          - torch-version: "2.4.1"
            python-version: "3.8"
            cuda-version: "12.1.1"
          - torch-version: "2.4.1"
            python-version: "3.8"
            cuda-version: "12.4.0"
          - torch-version: "2.4.1"
            python-version: "3.9"
            cuda-version: "11.8.0"
          - torch-version: "2.4.1"
            python-version: "3.9"
            cuda-version: "12.1.1"
          - torch-version: "2.4.1"
            python-version: "3.9"
            cuda-version: "12.4.0"
          - torch-version: "2.4.1"
            python-version: "3.10"
            cuda-version: "11.8.0"
          - torch-version: "2.4.1"
            python-version: "3.10"
            cuda-version: "12.1.1"
          - torch-version: "2.4.1"
            python-version: "3.10"
            cuda-version: "12.4.0"
          - torch-version: "2.4.1"
            python-version: "3.11"
            cuda-version: "11.8.0"
          - torch-version: "2.4.1"
            python-version: "3.11"
            cuda-version: "12.1.1"
          - torch-version: "2.4.1"
            python-version: "3.11"
            cuda-version: "12.4.0"
          - torch-version: "2.5.1"
            python-version: "3.9"
            cuda-version: "11.8.0"
          - torch-version: "2.5.1"
            python-version: "3.9"
            cuda-version: "12.1.1"
          - torch-version: "2.5.1"
            python-version: "3.9"
            cuda-version: "12.4.0"
          - torch-version: "2.5.1"
            python-version: "3.10"
            cuda-version: "11.8.0"
          - torch-version: "2.5.1"
            python-version: "3.10"
            cuda-version: "12.1.1"
          - torch-version: "2.5.1"
            python-version: "3.10"
            cuda-version: "12.4.0"
          - torch-version: "2.5.1"
            python-version: "3.11"
            cuda-version: "11.8.0"
          - torch-version: "2.5.1"
            python-version: "3.11"
            cuda-version: "12.1.1"
          - torch-version: "2.5.1"
            python-version: "3.11"
            cuda-version: "12.4.0"
          - torch-version: "2.5.1"
            python-version: "3.12"
            cuda-version: "11.8.0"
          - torch-version: "2.5.1"
            python-version: "3.12"
            cuda-version: "12.1.1"
          - torch-version: "2.5.1"
            python-version: "3.12"
            cuda-version: "12.4.0"
          - torch-version: "2.6.0"
            python-version: "3.9"
            cuda-version: "11.8.0"
          - torch-version: "2.6.0"
            python-version: "3.9"
            cuda-version: "12.4.0"
          - torch-version: "2.6.0"
            python-version: "3.9"
            cuda-version: "12.6.0"
          - torch-version: "2.6.0"
            python-version: "3.10"
            cuda-version: "11.8.0"
          - torch-version: "2.6.0"
            python-version: "3.10"
            cuda-version: "12.4.0"
          - torch-version: "2.6.0"
            python-version: "3.10"
            cuda-version: "12.6.0"
          - torch-version: "2.6.0"
            python-version: "3.11"
            cuda-version: "11.8.0"
          - torch-version: "2.6.0"
            python-version: "3.11"
            cuda-version: "12.4.0"
          - torch-version: "2.6.0"
            python-version: "3.11"
            cuda-version: "12.6.0"
          - torch-version: "2.6.0"
            python-version: "3.12"
            cuda-version: "11.8.0"
          - torch-version: "2.6.0"
            python-version: "3.12"
            cuda-version: "12.4.0"
          - torch-version: "2.6.0"
            python-version: "3.12"
            cuda-version: "12.6.0"
          - torch-version: "2.7.0"
            python-version: "3.9"
            cuda-version: "11.8.0"
          - torch-version: "2.7.0"
            python-version: "3.9"
            cuda-version: "12.6.0"
          - torch-version: "2.7.0"
            python-version: "3.9"
            cuda-version: "12.8.0"
          - torch-version: "2.7.0"
            python-version: "3.10"
            cuda-version: "11.8.0"
          - torch-version: "2.7.0"
            python-version: "3.10"
            cuda-version: "12.6.0"
          - torch-version: "2.7.0"
            python-version: "3.10"
            cuda-version: "12.8.0"
          - torch-version: "2.7.0"
            python-version: "3.11"
            cuda-version: "11.8.0"
          - torch-version: "2.7.0"
            python-version: "3.11"
            cuda-version: "12.6.0"
          - torch-version: "2.7.0"
            python-version: "3.11"
            cuda-version: "12.8.0"
          - torch-version: "2.7.0"
            python-version: "3.12"
            cuda-version: "11.8.0"
          - torch-version: "2.7.0"
            python-version: "3.12"
            cuda-version: "12.6.0"
          - torch-version: "2.7.0"
            python-version: "3.12"
            cuda-version: "12.8.0"
          - torch-version: "2.7.0"
            python-version: "3.13"
            cuda-version: "11.8.0"
          - torch-version: "2.7.0"
            python-version: "3.13"
            cuda-version: "12.6.0"
          - torch-version: "2.7.0"
            python-version: "3.13"
            cuda-version: "12.8.0"

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
    
      - name: Checkout Apex
        uses: actions/checkout@v4
        with:
          repository: NVIDIA/apex
          submodules: recursive
          ref: 25.04

      - name: Checkout utils
        uses: actions/checkout@v4
        with:
          path: build_scripts

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set CUDA and PyTorch versions ${{ matrix.torch-version }}+cu${{ matrix.cuda-version }}
        run: |
          echo "CI_CUDA_VERSION=$(echo ${{ matrix.cuda-version }})" >> $GITHUB_ENV
          echo "CI_TORCH_VERSION=$(echo ${{ matrix.torch-version }})" >> $GITHUB_ENV
          echo "CI_PYTHON_VERSION=$(echo ${{ matrix.python-version }})" >> $GITHUB_ENV
          echo "MATRIX_CUDA_VERSION=$(echo ${{ matrix.cuda-version }} | awk -F \. {'print $1 $2'})" >> $GITHUB_ENV
          echo "MATRIX_TORCH_VERSION=$(echo ${{ matrix.torch-version }} | awk -F \. {'print $1 "." $2'})" >> $GITHUB_ENV
          echo "MATRIX_PYTHON_VERSION=$(echo ${{ matrix.python-version }} | awk -F \. {'print $1 $2'})" >> $GITHUB_ENV

      - name: Install cibuildwheel
        run: |
          echo "MANYLINUX_CUDA_VERSION=$(python -c "from os import environ as env; print({'118': '11.8', '121': '12.1', '124': '12.4'}[env['MATRIX_CUDA_VERSION']])")" >> $GITHUB_ENV
          echo "MANYLINUX_NVTX_CUDA_VERSION=$(python -c "from os import environ as env; print({'118': '11-8', '121': '12-1', '124': '12-4'}[env['MATRIX_CUDA_VERSION']])")" >> $GITHUB_ENV
          echo "MANYLINUX_CUDNN_CUDA_VERSION=$(echo ${{ matrix.cuda-version }} | awk -F \. {'print $1'})" >> $GITHUB_ENV
          python3 -m pip install --upgrade pip
          python3 -m pip install cibuildwheel

      - name: Build wheels for Pytorch ${{ matrix.torch-version }}+cu${{ matrix.cuda-version }}
        run: |
          python3 -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: cp${{ env.MATRIX_PYTHON_VERSION }}-*64
          CIBW_MANYLINUX_X86_64_IMAGE: pytorch/manylinux2_28-builder:cuda${{ env.MANYLINUX_CUDA_VERSION }}
          CIBW_BEFORE_BUILD_LINUX: >
            bash build_scripts/prepare_for_build.sh
          CIBW_ENVIRONMENT: CUDA_HOME="/usr/local/cuda-${{ env.MANYLINUX_CUDA_VERSION }}" CUDACXX="/usr/local/cuda-${{ env.MANYLINUX_CUDA_VERSION }}/bin/nvcc" CFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib" TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0+PTX" AUDITWHEEL_PLAT="manylinux_2_28_$(uname -m)" MATRIX_CUDA_VERSION=${{ env.MATRIX_CUDA_VERSION }} MATRIX_TORCH_VERSION=${{ env.MATRIX_TORCH_VERSION }} MATRIX_PYTHON_VERSION=${{ env.MATRIX_PYTHON_VERSION }} CI_CUDA_VERSION=${{ env.CI_CUDA_VERSION }} CI_TORCH_VERSION=${{ env.CI_TORCH_VERSION }} CI_PYTHON_VERSION=${{ env.CI_PYTHON_VERSION }} MANYLINUX_CUDA_VERSION=${{ env.MANYLINUX_CUDA_VERSION }} NVTE_NO_LOCAL_VERSION=1 MAX_JOBS=1
          CIBW_CONFIG_SETTINGS: --build-option=--cpp_ext --build-option=--cuda_ext --build-option=--permutation_search --build-option=--bnp --build-option=--xentropy --build-option=--focal_loss --build-option=--index_mul_2d --build-option=--deprecated_fused_adam --build-option=--deprecated_fused_lamb --build-option=--fast_layer_norm --build-option=--fmha --build-option=--fast_multihead_attn --build-option=--transducer --build-option=--cudnn_gbn --build-option=--peer_memory --build-option=--nccl_p2p --build-option=--fast_bottleneck --build-option=--group_norm --build-option=--fused_conv_bias_relu --build-option=--nccl_allocator --build-option=--gpu_direct_storage --build-option=--distributed_adam --build-option=--distributed_lamb
          CIBW_SKIP: "*musllinux*"
          CIBW_BUILD_FRONTEND: "pip; args: --no-build-isolation"
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair -w /tmp/cibuildwheel/repaired_wheel {wheel} --exclude libc10.so --exclude libc10_cuda.so --exclude libtorch.so --exclude libtorch_python.so --exclude libtorch_cpu.so --exclude libtorch_cuda.so --exclude libtorch_cuda_cpp.so --exclude libtorch_cuda_cu.so --exclude libcuda.so.1 --exclude libcufile.so.0 --exclude libcufile.so --exclude libcudart.so.12 --exclude libcudart.so.11.0 --exclude libcudart.so.11 --exclude libnccl.so --exclude libnccl.so.1 --exclude libnccl.so.2 --exclude libcudart.so.11 --exclude libcudart.so.12 --exclude libcudart.so.11.0 --exclude libcudart.so.12.0 --exclude libcurand.so.10 --exclude libcublas.so.12 --exclude libcublasLt.so.12"
          
      - name: Log Built Wheels
        run: |
          wheel_name=$(ls dist/*whl | xargs -n 1 basename)
          echo "wheel_name=${wheel_name}" >> $GITHUB_ENV
          ls dist

      - uses: actions/upload-artifact@v4
        with:
          name: ${{env.wheel_name}}
          path: dist/${{env.wheel_name}}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./dist/${{env.wheel_name}}
